pipeline {
    agent any

    environment {
        DOCKER_IMAGE       = 'kenmurakii/fastapi-webhook:latest'
        DOCKER_CREDENTIALS = credentials('089f0a8a-6638-4990-80a3-07d3c0e083e5')
    }

    stages {
        stage('Start Jenkins') {
            steps {
                    sh 'echo Start Jenkins............'
                    sh 'echo docker : user = kenmurakii : password = $DOCKER_CREDENTIALS_PSW'
            }
        }

        stage('Clone Repositories') {
            steps {
                script {
                    sh 'ls'
                    git branch: 'deploy', url: 'https://github.com/Kenmuraki5/kro-gamestore.git'
                    sh 'docker compose -f "docker-compose.yml" up -d --build'
                }
            }
        }

        stage('Build and Run Docker Compose') {
            steps {
                sh 'echo "OMISE_PUBLIC_KEY=pkey_test_5yy91xv84zjnnitvdw0" > kro-backend/.env'
                sh 'echo "OMISE_SECRET_KEY=skey_test_5wmco0oh1cfnliaoszv" >> kro-backend/.env'
                sh 'echo "SECRET_KEY=s_kroKey_back_i2tpohbojgagageq3u4ihryh" >> kro-backend/.env'
                sh 'docker compose -f "docker-compose.yml" up -d --build'
            }
        }


        stage('Secure shell to instance AWS and Deploy') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'your_ssh_key', keyFileVariable: 'SSH_KEY')]) {
                        sh '''
                            chmod 600 $SSH_KEY
                            ssh -i $SSH_KEY ec2-user@your_instance_ip'
                            git branch: 'deploy', url: 'https://github.com/Kenmuraki5/kro-gamestore.git'
                            echo "OMISE_PUBLIC_KEY=pkey_test_5yy91xv84zjnnitvdw0" > kro-backend/.env
                            echo "OMISE_SECRET_KEY=skey_test_5wmco0oh1cfnliaoszv" >> kro-backend/.env
                            echo "SECRET_KEY=s_kroKey_back_i2tpohbojgagageq3u4ihryh" >> kro-backend/.env
                            docker-compose -f docker-compose.yml up -d --build
                        '''
                    }
                }
            }
        }
    }

     post {
        success {
            echo 'Build and deployment successful!'
        }
        failure {
            echo 'Build or deployment failed!'
        }
    }
}
